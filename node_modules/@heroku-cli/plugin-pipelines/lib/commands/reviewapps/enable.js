"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@heroku-cli/command");
const cli_ux_1 = require("cli-ux");
class ReviewappsEnable extends command_1.Command {
    async run() {
        const { flags } = this.parse(ReviewappsEnable);
        const settings = {
            pull_requests: {
                enabled: true,
                auto_deploy: false,
                auto_destroy: false
            }
        };
        if (flags.autodeploy) {
            this.log('Enabling auto deployment...');
            settings.pull_requests.auto_deploy = true;
        }
        if (flags.autodestroy) {
            this.log('Enabling auto destroy...');
            settings.pull_requests.auto_destroy = true;
        }
        cli_ux_1.default.action.start('Configuring pipeline');
        let { body: app } = await this.heroku.get(`/apps/${flags.app}`);
        await this.heroku.patch(`/apps/${app.id}/github`, {
            hostname: 'kolkrabbi.heroku.com',
            body: settings
        });
        cli_ux_1.default.action.stop();
    }
}
ReviewappsEnable.description = 'enable review apps and/or settings on an existing pipeline';
ReviewappsEnable.examples = [
    '$ heroku reviewapps:enable -p mypipeline -a myapp --autodeploy --autodestroy',
];
ReviewappsEnable.flags = {
    app: command_1.flags.string({ char: 'a', description: 'parent app used by review apps', required: true }),
    pipeline: command_1.flags.string({ char: 'p', description: 'name of pipeline', required: true }),
    autodeploy: command_1.flags.boolean({ description: 'autodeploy the review app' }),
    autodestroy: command_1.flags.boolean({ description: 'autodestroy the review app' }),
};
exports.default = ReviewappsEnable;
